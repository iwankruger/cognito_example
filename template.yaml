AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cognito_example

  Sample SAM Template for cognito_example

Globals:
  Function:
    Timeout: 3

Parameters:
  AppStage:
    Type: String
    Default: stage
  YourEmail:
    Type: String
    Default: admin@email.com  

Resources:
  
  CognitoExampleUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        # Set to true if only the administrator is allowed to create user profiles. 
        # Set to false if users can sign themselves up via an app. 
        AllowAdminCreateUserOnly: true 
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6 
          RequireLowercase: true
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: true           

  CognitoExampleUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      GenerateSecret: false
      RefreshTokenValidity: 30
      UserPoolId: !Ref CognitoExampleUserPool
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH          

  # create a default user    
  UserPoolUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: !Ref YourEmail
      UserPoolId: !Ref CognitoExampleUserPool

  # API Gateway
  CognitoExampleApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref AppStage
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: CognitoExampleAuthorizer
        Authorizers:
          CognitoExampleAuthorizer:
            UserPoolArn: !GetAtt CognitoExampleUserPool.Arn

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref CognitoExampleApi
            Auth:
              Authorizer: CognitoExampleAuthorizer

Outputs:
  userPool:
    Description: "User pool ID"
    Value: !Ref CognitoExampleUserPool
  clientId: 
    Description: "Client id for the user pool"
    Value: !Ref CognitoExampleUserPoolClient
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${CognitoExampleApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
